#!/usr/bin/env stap
# strace-only-stats-set.stp
# Copyright (C) 2009 Przemyslaw Pawelczyk <przemyslaw@pawelczyk.it>
#
# ./strace-only-stats-set.stp -c '<tracee>'
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#

global starttime[65536], stats, tstats

probe syscall.* {
        if (target_set_pid(pid())) {
                starttime[name, tid()] = gettimeofday_us()
        }
}

probe syscall.*.return {
        if (target_set_pid(pid()) && ([name, tid()] in starttime)) {
                delta = gettimeofday_us() - starttime[name, tid()]
                stats[name] <<< delta
                tstats <<< delta
                delete starttime[name, tid()]
        }
}

probe end {
        printf("\n%11s %11s %9s %-16s\n", "useconds", "usecs/call", "calls", "syscall")
        printf("%11s %11s %9s %-16s\n", "-----------", "-----------",
"---------", "----------------")
        n = 0   # different calls counter
        foreach (call in stats) {
                printf("%11d %11d %9d %-16s\n",
                       @sum(stats[call]),
                       @avg(stats[call]),
                       @count(stats[call]),
                       call)
                n++
        }
        printf("%11s %11s %9s %-16s\n", "-----------", "-----------",
"---------", "----------------")
        printf("%11d %11d %9d %s (%d)\n", @sum(tstats), @avg(tstats),
@count(tstats), "total", n)
        delete stats
        delete tstats
}
